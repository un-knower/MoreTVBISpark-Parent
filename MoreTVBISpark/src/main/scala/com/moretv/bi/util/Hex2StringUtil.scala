package com.moretv.bi.util


import cn.whaley.turbo.forest.core.ProcessLog

import scala.collection.mutable.ListBuffer
import org.json.JSONObject

/**
  * Created by Will on 2016/8/30.
  */
object Hex2StringUtil {

  @deprecated
  def hex2Str(hexStr:String) = {

    val sIndex = hexStr.indexOf("\"requestBody\":\"")
    val eIndex = hexStr.indexOf("}\",\"status\"",sIndex + 15)
    val log = hexStr.substring(sIndex+15,eIndex+1)
    val mapList = new ListBuffer[(String,String)]()
    var startIndex = 0
    var endIndex = 0
    val length = log.length
    val byteBuffer = new ListBuffer[Byte]()
    var strBuffer = new StringBuffer()
    while (startIndex >= 0 && endIndex >= 0 && endIndex < length){
      startIndex = log.indexOf('\\',startIndex+1)
      if(startIndex > 0){
        endIndex = startIndex+4
        val tempStr = log.substring(startIndex,endIndex)
        val byte = Integer.parseInt(tempStr.substring(2),16).toByte
        strBuffer.append(tempStr)
        byteBuffer += byte
        if(endIndex < length && log.charAt(endIndex) != '\\'){
          val result = new String(byteBuffer.toArray,"UTF-8")
          val key = strBuffer.toString
          mapList += key -> result
          byteBuffer.clear()
          strBuffer = new StringBuffer()
        }
      }

    }
    var temp = log
    val sortedList = mapList.sortBy(x => -x._1.length)
    sortedList.foreach(e => {
      val (key,value) = e
      temp = temp.replace(key,value)
    })
    temp
  }

  def hex2String(log:String) = {
    val byteBuffer = new ListBuffer[Byte]()
    val length = log.length
    var position = 0
    while (position < length){
      val char = log.charAt(position)
      if(char == '\\'){
        val str = log.substring(position+2,position+4)
        byteBuffer += Integer.parseInt(str,16).toByte
        position += 4
      }else {
        byteBuffer += char.toByte
        position += 1
      }
    }
    new String(byteBuffer.toArray,"UTF-8")
  }


  def main(args: Array[String]) {
//    val str = """{"remote_addr":"183.39.153.82","time":"30/Aug/2016:14:44:19 +0800","request":"POST /medusalog/ HTTP/1.1","requestBody":"{\x22md5\x22:\x22dbc26cb50421f485d9a1dbcd3d430a33\x22,\x22baseInfo\x22:\x22{\x5C\x22apkVersion\x5C\x22:\x5C\x223.0.9\x5C\x22,\x5C\x22groupId\x5C\x22:\x5C\x22775\x5C\x22,\x5C\x22accountId\x5C\x22:\x5C\x22\x5C\x22,\x5C\x22appEnterWay\x5C\x22:\x5C\x22native\x5C\x22,\x5C\x22promotionChannel\x5C\x22:\x5C\x22yidian\x5C\x22,\x5C\x22userId\x5C\x22:\x5C\x228b3d676b085f802b781b7a3b1757ea81\x5C\x22,\x5C\x22apkSeries\x5C\x22:\x5C\x22MoreTV_TVApp3.0_Medusa_YunOS2\x5C\x22,\x5C\x22productModel\x5C\x22:\x5C\x22le32d58s\x5C\x22,\x5C\x22versionCode\x5C\x22:\x5C\x22309\x5C\x22,\x5C\x22buildDate\x5C\x22:\x5C\x2220160822\x5C\x22,\x5C\x22uploadTime\x5C\x22:\x5C\x2220160830144419\x5C\x22,\x5C\x22weatherCode\x5C\x22:\x5C\x22101280601\x5C\x22}\x22,\x22ts\x22:1472539459666,\x22logs\x22:\x22[{\x5C\x22logVersion\x5C\x22:\x5C\x2202\x5C\x22,\x5C\x22happenTime\x5C\x22:1472539293096,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x223fqsjlstg6su\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x223fqskm1chjik\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22comic\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE6\x96\xB0\xE7\x89\x88\xE7\x8C\xAB\xE5\x92\x8C\xE8\x80\x81\xE9\xBC\xA0[41]\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x22bde3fbb0-e21b-425f-91a3-210ac397cce1\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22start\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22}]\x22,\x22version\x22:\x2201\x22}","status":"200","host":"log.moretv.com.cn","ip_forwarded":"183.39.153.82"}"""
//    println(Integer.parseInt("5C",16).toByte.toChar)
    val str = """{"remote_addr":"116.236.190.58","time":"03/Aug/2016:15:40:48 +0800","request":"POST /medusalog/ HTTP/1.1","requestBody":"{\x22md5\x22:\x22ebf9cf426697c064e65af02a2806a042\x22,\x22baseInfo\x22:\x22{\x5C\x22apkVersion\x5C\x22:\x5C\x223.0.9\x5C\x22,\x5C\x22groupId\x5C\x22:\x5C\x22674\x5C\x22,\x5C\x22accountId\x5C\x22:\x5C\x22\x5C\x22,\x5C\x22appEnterWay\x5C\x22:\x5C\x22native\x5C\x22,\x5C\x22promotionChannel\x5C\x22:\x5C\x22general\x5C\x22,\x5C\x22userId\x5C\x22:\x5C\x225420841726988e0ce1bc2be2f4f831a5\x5C\x22,\x5C\x22apkSeries\x5C\x22:\x5C\x22MoreTV_TVApp3.0_Medusa\x5C\x22,\x5C\x22productModel\x5C\x22:\x5C\x22Hi3798CV100\x5C\x22,\x5C\x22versionCode\x5C\x22:\x5C\x22309\x5C\x22,\x5C\x22buildDate\x5C\x22:\x5C\x2220160715\x5C\x22,\x5C\x22uploadTime\x5C\x22:\x5C\x2220160803154047\x5C\x22,\x5C\x22weatherCode\x5C\x22:\x5C\x22101020300\x5C\x22}\x22,\x22ts\x22:1470210047766,\x22logs\x22:\x22[{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22pageType\x5C\x22:\x5C\x22\xE7\x8C\xAB\xE5\xA4\xB4\xE5\x9B\xBE\x5C\x22},\x5C\x22happenTime\x5C\x22:1470209804523,\x5C\x22eventId\x5C\x22:\x5C\x22medusa-startPageView-startpage\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22event\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22tvn88q235h2d\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22tvn88q235h2d\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE6\x88\xBF\xE5\xAD\x90\xE5\x9C\xB0\xE6\x9D\xBF\xE5\xB8\xA6\xE7\x94\xB5 \xE5\x88\x86\xE5\x88\x86\xE9\x92\x9F\xE7\x83\xA4\xE7\x86\x9F\xE9\xB8\xA1\xE8\x9B\x8B\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x22b4df8e97-3c6d-4894-bd59-cfdb89b4ab26\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22fhlnjktvfhab\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22fhlnjktvfhab\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE6\x8F\x90\xE5\x89\x8D\xE4\xB8\x8B\xE8\xBD\xA6\xE8\xA2\xAB\xE6\x8B\x92\xE7\xBB\x9D \xE4\xB9\x98\xE5\xAE\xA2\xE4\xBB\x8E\xE8\xBD\xA6\xE7\xAA\x97\xE8\xB7\xB3\xE5\x87\xBA\xE5\x8E\xBB\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x22c2b7605a-9b59-4e80-a906-8be08dbdf3d8\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22tvn88q23459v\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22tvn88q23459v\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE8\x90\x9D\xE8\x8E\x89\xE6\x8B\xB3\xE5\x87\xBB\xE6\x89\x8B\xE5\x8A\xA8\xE4\xBD\x9C\xE5\xB8\x85\xE7\xBF\xBB\xE5\x85\xA8\xE5\x9C\xBA\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x22a56c1040-c792-4975-a1b1-ff5c5d2772fe\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22fhlnjktvfhab\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22fhlnjktvfhab\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE6\x8F\x90\xE5\x89\x8D\xE4\xB8\x8B\xE8\xBD\xA6\xE8\xA2\xAB\xE6\x8B\x92\xE7\xBB\x9D \xE4\xB9\x98\xE5\xAE\xA2\xE4\xBB\x8E\xE8\xBD\xA6\xE7\xAA\x97\xE8\xB7\xB3\xE5\x87\xBA\xE5\x8E\xBB\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x22a955711b-5be4-41c3-aa61-be36a7b746b0\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22fhmoqrrucepq\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22fhmoqrrucepq\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE5\xB0\x84\xE5\x87\xBB\xE9\x98\x9F\xE2\x80\x9C\xE7\x8E\xB2\xE4\xB8\xBD\xE2\x80\x9D\xE7\xBB\x84\xE5\x90\x88\xE4\xB8\x80\xE5\x96\x9C\xE4\xB8\x80\xE5\xBF\xA7\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x227a9dd0d1-2e21-44a9-8e3a-d496fda457d1\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22fhmoqrrucepq\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22fhmoqrrucepq\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE5\xB0\x84\xE5\x87\xBB\xE9\x98\x9F\xE2\x80\x9C\xE7\x8E\xB2\xE4\xB8\xBD\xE2\x80\x9D\xE7\xBB\x84\xE5\x90\x88\xE4\xB8\x80\xE5\x96\x9C\xE4\xB8\x80\xE5\xBF\xA7\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x220aba55e5-111f-42bf-92ec-9ec205045a0f\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22fhmoqroqd4p8\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22fhmoqroqd4p8\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE5\xA5\xA5\xE8\xBF\x90\xE6\x9D\x91\xE9\xA3\x9F\xE5\xA0\x82 \xE5\x8F\xAF\xE5\xAE\xB95\xE5\x8D\x83\xE4\xBA\xBA\xE5\xB0\xB1\xE9\xA4\x90\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x22fb345f57-92f8-45eb-ba97-a4246f36fae0\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22fhmoqrs9ceop\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22fhmoqrs9ceop\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE6\xA2\xA6\xE4\xB9\x8B\xE9\x98\x9F\xE9\x87\x8C\xE7\xBA\xA6\xE8\xAE\xAD\xE7\xBB\x83\xE9\x81\xAD\xE9\x81\x87\xE9\xA6\x96\xE9\x87\x8D\xE8\x80\x83\xE9\xAA\x8C\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x22dbdef245-191c-4ae0-b817-d92695ce8ebc\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22},{\x5C\x22logVersion\x5C\x22:\x5C\x2201\x5C\x22,\x5C\x22params\x5C\x22:{\x5C\x22videoSid\x5C\x22:\x5C\x22fhlnjktvfhab\x5C\x22,\x5C\x22operation\x5C\x22:\x5C\x22pause\x5C\x22,\x5C\x22episodeSid\x5C\x22:\x5C\x22fhlnjktvfhab\x5C\x22,\x5C\x22contentType\x5C\x22:\x5C\x22hot\x5C\x22,\x5C\x22videoName\x5C\x22:\x5C\x22\xE6\x8F\x90\xE5\x89\x8D\xE4\xB8\x8B\xE8\xBD\xA6\xE8\xA2\xAB\xE6\x8B\x92\xE7\xBB\x9D \xE4\xB9\x98\xE5\xAE\xA2\xE4\xBB\x8E\xE8\xBD\xA6\xE7\xAA\x97\xE8\xB7\xB3\xE5\x87\xBA\xE5\x8E\xBB\x5C\x22},\x5C\x22uuid\x5C\x22:\x5C\x221466f4c1-37af-4b35-b055-f102ab8f74a1\x5C\x22,\x5C\x22actionId\x5C\x22:\x5C\x22medusa-play-play-pause\x5C\x22,\x5C\x22status\x5C\x22:\x5C\x22end\x5C\x22,\x5C\x22logType\x5C\x22:\x5C\x22start_end\x5C\x22}]\x22,\x22version\x22:\x2201\x22}","status":"200","host":"log.moretv.com.cn","ip_forwarded":"116.236.190.58"}"""
//    val start = System.currentTimeMillis()
//    val temp = hex2String(str)
//    val end = System.currentTimeMillis()
//    println(end-start)

//    val start1 = System.currentTimeMillis()
//    hex2String(str)
//    val end1 = System.currentTimeMillis()
//    println(end1-start1)
    val regex = ("\\{\"remote_addr\":\"([0-9\\.]+)\",\"time\":\"([^ ]+).+?\"requestBody\":\"([^\"]+)" +
      "\",\"status\".+?\"ip_forwarded\":\"([0-9\\.]+)").r

    regex findFirstMatchIn str match {
      case Some(m) => {
        val remoteIp = m.group(1)
        val time = m.group(2)
        val body = m.group(3)
        val forwardIp = m.group(4)
        val ip = if(forwardIp != "") forwardIp else remoteIp
        val jsonStr = Hex2StringUtil.hex2String(body)
        val Array(date,datetime) = DateFormatUtils.toCNDateArray(time)

        //TODO 平展化每一个json，并将ip和时间放进去
        val json = new JSONObject(jsonStr)
        ProcessLog.logFlattening(json).map(js => {
          js.put("realIP",ip)
          js.put("date",date)
          js.put("day",date)
          js.put("datetime",datetime)
          js.toString()
        }).foreach(println)
      }
      case None =>
    }
    println("===============================")
  }
}
